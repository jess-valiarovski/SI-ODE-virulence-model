#3:45
# load libraries 
#install.packages(pacman)
pacman::p_load(deSolve,ggplot2,plyr)

# initiate state variables: host population abundances
init <- c(
  S=500, # susceptible subpopulation
  I1=100, #infected subpop by virulence class 1
  I2=100, #infected subpop by virulence class 2
  I3=100, #infected subpop by virulence class 3
  I4=100, #infected subpop by virulence class 4
  I5=100, #infected subpop by virulence class 5
  I6=100, #infected subpop by virulence class 6
  I7=100, #infected subpop by virulence class 7
  I8=100, #infected subpop by virulence class 8
  I9=100, #infected subpop by virulence class 9
  I10=100 #infected subpop by virulence class 10
)

# initate time of simulation 
times <- seq(0, 500, by = 1)

# simulation 1: vary exclusively host tolerance
parameters1 <- expand.grid(m_t = seq(0,1,0.05),
                          m_r = 0,
                          beta = 0.4,
                          gamma = 0.01,
                          miu_s = 0.1,
                          fecundity = 1
)
for (i in 1:nrow(parameters1)){
  out <- lsodar(func = SIM_MODEL, y = init, parms = parameters1[i,],
                times = times, rootfun = rootfun)
  out_df = data.frame(out)
  for (t in 1:length(times)){
    out_df[t,'avg_class'] <- (sum(out_df[t,3:12]*1:10))/(sum(out_df[t,3:12]))
  }
  parameters1[i,'avg_class'] = out_df[nrow(out_df),length(out_df)]
}
ggplot(parameters1, aes(x=m_t,y=avg_class)) + geom_point() + stat_smooth(method = "loess")


